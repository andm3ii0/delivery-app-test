{"ast":null,"code":"var _jsxFileName = \"/home/anderson-mello/delivery-app-test/front-end/src/Components/OrderCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { requestOrders } from '../Services/Request';\nimport { getUserInfo } from '../Services/Storage';\nimport { OrderItemDiv, Orders } from './Styles/saleOrderItem';\n// import { AppContext } from '../Context/orderProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrdersCard() {\n  _s();\n  // const { order, setOrder } = useContext(AppContext);\n  const [ordersList, setOrdersList] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const {\n        id\n      } = getUserInfo();\n      const orders = await requestOrders('/seller/orders', {\n        id\n      });\n      setOrdersList(orders);\n      if (orders.sellerId === id) {\n        setOrdersList(orders);\n      }\n    };\n    fetchOrders();\n  }, []);\n  function dataAtualFormatada(data) {\n    const newDate = new Date(data);\n    const dia = newDate.getDate().toString();\n    const diaF = dia.length === 1 ? `0${dia}` : dia;\n    const mes = (newDate.getMonth() + 1).toString(); // +1 pois no getMonth Janeiro começa com zero.\n    const mesF = mes.length === 1 ? `0${mes}` : mes;\n    const anoF = newDate.getFullYear();\n    return `${diaF}/${mesF}/${anoF}`;\n  }\n\n  // const handleClick = (orderInfo) => {\n  //   saveOrder(orderInfo);\n  //   setOrder(orderInfo);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Orders, {\n    className: \"orders-list\",\n    children: ordersList.map(sales => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => history.push(`/seller/orders/${sales.id}`),\n      children: /*#__PURE__*/_jsxDEV(OrderItemDiv, {\n        status: sales.status,\n        className: \"order-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": `seller_orders__element-order-id-${sales.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Pedido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: sales.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": `seller_orders__element-delivery-status-${sales.id}`,\n          children: sales.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": `seller_order__element-order-date-${sales.id}`,\n            children: dataAtualFormatada(sales.saleDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": `seller_orders__element-card-price-${sales.id}`,\n            children: sales.totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": `seller_orders__element-card-address-${sales.id}`,\n            children: sales.deliveryAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(OrdersCard, \"keUV399oFLTu26ep8VPEBNcZDRk=\", false, function () {\n  return [useHistory];\n});\n_c = OrdersCard;\nvar _c;\n$RefreshReg$(_c, \"OrdersCard\");","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","requestOrders","getUserInfo","OrderItemDiv","Orders","OrdersCard","ordersList","setOrdersList","history","fetchOrders","id","orders","sellerId","dataAtualFormatada","data","newDate","Date","dia","getDate","toString","diaF","length","mes","getMonth","mesF","anoF","getFullYear","map","sales","push","status","saleDate","totalPrice","deliveryAddress"],"sources":["/home/anderson-mello/delivery-app-test/front-end/src/Components/OrderCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { requestOrders } from '../Services/Request';\nimport { getUserInfo } from '../Services/Storage';\nimport { OrderItemDiv, Orders } from './Styles/saleOrderItem';\n// import { AppContext } from '../Context/orderProvider';\n\nexport default function OrdersCard() {\n  // const { order, setOrder } = useContext(AppContext);\n  const [ordersList, setOrdersList] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const { id } = getUserInfo();\n      const orders = await requestOrders('/seller/orders', { id });\n      setOrdersList(orders);\n\n      if (orders.sellerId === id) {\n        setOrdersList(orders);\n      }\n    };\n    fetchOrders();\n  }, []);\n\n  function dataAtualFormatada(data) {\n    const newDate = new Date(data);\n    const dia = newDate.getDate().toString();\n    const diaF = (dia.length === 1) ? `0${dia}` : dia;\n    const mes = (newDate.getMonth() + 1).toString(); // +1 pois no getMonth Janeiro começa com zero.\n    const mesF = (mes.length === 1) ? `0${mes}` : mes;\n    const anoF = newDate.getFullYear();\n    return `${diaF}/${mesF}/${anoF}`;\n  }\n\n  // const handleClick = (orderInfo) => {\n  //   saveOrder(orderInfo);\n  //   setOrder(orderInfo);\n  // };\n\n  return (\n    <Orders className=\"orders-list\">\n      {\n        ordersList.map((sales) => (\n          <button\n              type=\"button\"\n              onClick={ () => history.push(`/seller/orders/${sales.id}`) }\n            >\n            <OrderItemDiv status={ sales.status } className=\"order-card\">\n              <div data-testid={ `seller_orders__element-order-id-${sales.id}` }>\n                <p>Pedido</p>\n                <p>{ sales.id }</p>\n              </div>\n              <span data-testid={ `seller_orders__element-delivery-status-${sales.id}` }>\n                { sales.status }\n              </span>\n              <div>\n                <p data-testid={ `seller_order__element-order-date-${sales.id}` }>\n                  { dataAtualFormatada(sales.saleDate) }\n                </p>\n                <p data-testid={ `seller_orders__element-card-price-${sales.id}` }>\n                  { sales.totalPrice }\n                </p>\n              <p data-testid={ `seller_orders__element-card-address-${sales.id}` }>\n                { sales.deliveryAddress }\n              </p>\n              </div>\n            </OrderItemDiv>\n          </button>\n        ))\n      }\n    </Orders>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}