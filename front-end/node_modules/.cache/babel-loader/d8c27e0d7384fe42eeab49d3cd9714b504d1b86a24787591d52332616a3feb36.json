{"ast":null,"code":"var _jsxFileName = \"/home/anderson-mello/delivery-app-test/front-end/src/Pages/Register.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { requestRegister } from '../Services/Request';\nimport { saveUserInfo } from '../Services/Storage';\nimport { FilledButton, LoginForm, LoginPage } from './Styles/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [requestError, setRequestError] = useState(false);\n  const emailRegex = /^[a-z0-9._-]+@[a-z0-9]+\\.[a-z]/i;\n  const validEmail = emailRegex.test(email);\n  const history = useHistory();\n  function buttonDisable(_ref) {\n    let {\n      target\n    } = _ref;\n    setEmail(target.value);\n    setRequestError(false);\n  }\n  const saveInfoAndRedirect = userInfo => {\n    const {\n      role\n    } = userInfo;\n    saveUserInfo(userInfo);\n    const path = {\n      customer: '/customer/products',\n      administrator: '/admin/manage',\n      seller: '/seller/orders'\n    };\n    return history.push(path[role]);\n  };\n  async function HandleClick() {\n    try {\n      const {\n        id: _,\n        ...userWithoutId\n      } = await requestRegister('/register', {\n        email,\n        password,\n        name\n      });\n      saveInfoAndRedirect(userWithoutId);\n    } catch (error) {\n      setRequestError(true);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(LoginPage, {\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input-name\",\n        children: [\"Nome\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"input-name\",\n          \"data-testid\": \"common_register__input-name\",\n          placeholder: \"Seu nome\",\n          value: name,\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setName(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input-email\",\n        children: [\"E-mail\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          \"data-testid\": \"common_register__input-email\",\n          id: \"input-email\",\n          value: email,\n          onChange: buttonDisable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input-password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          \"data-testid\": \"common_register__input-password\",\n          id: \"input-password\",\n          value: password,\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !(name.length >= Number('12') && validEmail && password.length >= Number('6')),\n        type: \"button\",\n        \"data-testid\": \"common_register__button-register\",\n        onClick: HandleClick,\n        children: /*#__PURE__*/_jsxDEV(FilledButton, {\n          children: \"CADASTRAR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), requestError && /*#__PURE__*/_jsxDEV(\"p\", {\n      \"data-testid\": \"common_register__element-invalid_register\",\n      children: \"Falha ao fazer cadastro!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"16vTjKJZTEUzkgkY2ASQxBWorjY=\", false, function () {\n  return [useHistory];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useHistory","requestRegister","saveUserInfo","FilledButton","LoginForm","LoginPage","Register","name","setName","email","setEmail","password","setPassword","requestError","setRequestError","emailRegex","validEmail","test","history","buttonDisable","target","value","saveInfoAndRedirect","userInfo","role","path","customer","administrator","seller","push","HandleClick","id","_","userWithoutId","error","length","Number"],"sources":["/home/anderson-mello/delivery-app-test/front-end/src/Pages/Register.js"],"sourcesContent":["import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { requestRegister } from '../Services/Request';\nimport { saveUserInfo } from '../Services/Storage';\nimport { FilledButton, LoginForm, LoginPage } from './Styles/login';\n\nexport default function Register() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [requestError, setRequestError] = useState(false);\n\n  const emailRegex = /^[a-z0-9._-]+@[a-z0-9]+\\.[a-z]/i;\n  const validEmail = emailRegex.test(email);\n  const history = useHistory();\n\n  function buttonDisable({ target }) {\n    setEmail(target.value);\n    setRequestError(false);\n  }\n\n  const saveInfoAndRedirect = (userInfo) => {\n    const { role } = userInfo;\n\n    saveUserInfo(userInfo);\n\n    const path = {\n      customer: '/customer/products',\n      administrator: '/admin/manage',\n      seller: '/seller/orders',\n    };\n\n    return history.push(path[role]);\n  };\n\n  async function HandleClick() {\n    try {\n      const { id: _, ...userWithoutId } = await requestRegister('/register', {\n        email,\n        password,\n        name,\n      });\n\n      saveInfoAndRedirect(userWithoutId);\n    } catch (error) {\n      setRequestError(true);\n    }\n  }\n\n  return (\n    <LoginPage>\n      <LoginForm>\n        <label htmlFor=\"input-name\">\n          Nome\n          <input\n            type=\"text\"\n            id=\"input-name\"\n            data-testid=\"common_register__input-name\"\n            placeholder=\"Seu nome\"\n            value={ name }\n            onChange={ ({ target }) => setName(target.value) }\n          />\n        </label>\n        <label htmlFor=\"input-email\">\n          E-mail\n          <input\n            type=\"email\"\n            data-testid=\"common_register__input-email\"\n            id=\"input-email\"\n            value={ email }\n            onChange={ buttonDisable }\n          />\n        </label>\n        <label htmlFor=\"input-password\">\n          Password\n          <input\n            type=\"password\"\n            data-testid=\"common_register__input-password\"\n            id=\"input-password\"\n            value={ password }\n            onChange={ ({ target }) => setPassword(target.value) }\n          />\n        </label>\n        <button\n          disabled={ !(name.length >= Number('12')\n            && validEmail\n            && password.length >= Number('6')) }\n          type=\"button\"\n          data-testid=\"common_register__button-register\"\n          onClick={ HandleClick }\n        >\n          <FilledButton>\n            CADASTRAR\n          </FilledButton>\n        </button>\n      </LoginForm>\n      { requestError && (\n        <p data-testid=\"common_register__element-invalid_register\">\n          Falha ao fazer cadastro!\n        </p>\n      ) }\n    </LoginPage>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}