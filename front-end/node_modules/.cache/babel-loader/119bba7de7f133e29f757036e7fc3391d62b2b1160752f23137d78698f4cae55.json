{"ast":null,"code":"var _jsxFileName = \"/home/anderson-mello/delivery-app-test/front-end/src/Components/FormCreateUser.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { requestAdminRegister } from '../Services/Request';\nimport { getUserInfo } from '../Services/Storage';\nimport { AdminContext } from '../Context/AdminContex';\nimport { AdminContainer, AdminForm } from '../Pages/Styles/admin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormCreateUser() {\n  _s();\n  const [data, setData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    role: 'seller'\n  });\n  const [disable, setDisable] = useState(true);\n  const {\n    setCreateUserError,\n    setUsers\n  } = useContext(AdminContext);\n  useEffect(() => {\n    const handleEnableButton = () => {\n      const emailRegex = /^[a-z0-9._-]+@[a-z0-9]+\\.[a-z]/i;\n      const minLengthPassword = 6;\n      const minLengthName = 12;\n      if (data.password.length >= minLengthPassword && data.name.length >= minLengthName && emailRegex.test(data.email)) setDisable(false);else setDisable(true);\n    };\n    handleEnableButton();\n  }, [data]);\n  const handleUserCreated = newUser => {\n    delete newUser.id;\n    delete newUser.password;\n    setUsers(prevState => [...prevState, newUser]);\n  };\n  const handleClick = async () => {\n    const {\n      token\n    } = getUserInfo();\n    try {\n      const userCreated = await requestAdminRegister('/admin/manage', data, {\n        headers: {\n          Authorization: token\n        }\n      });\n      handleUserCreated(userCreated);\n    } catch (error) {\n      setCreateUserError(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AdminContainer, {\n    children: /*#__PURE__*/_jsxDEV(AdminForm, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"admin-nome\",\n        children: [\"Nome Completo\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"admin-nome\",\n          \"data-testid\": \"admin_manage__input-name\",\n          onChange: _ref => {\n            let {\n              target: {\n                value\n              }\n            } = _ref;\n            return setData({\n              ...data,\n              name: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"admin-email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"admin-email\",\n          \"data-testid\": \"admin_manage__input-email\",\n          onChange: _ref2 => {\n            let {\n              target: {\n                value\n              }\n            } = _ref2;\n            return setData({\n              ...data,\n              email: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"admin-senha\",\n        children: [\"Senha\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"admin-senha\",\n          \"data-testid\": \"admin_manage__input-password\",\n          onChange: _ref3 => {\n            let {\n              target: {\n                value\n              }\n            } = _ref3;\n            return setData({\n              ...data,\n              password: value\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"admin-select\",\n        children: [\"Tipo\", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"admin-select\",\n          defaultValue: \"role\",\n          \"data-testid\": \"admin_manage__select-role\",\n          onChange: _ref4 => {\n            let {\n              target: {\n                value\n              }\n            } = _ref4;\n            return setData({\n              ...data,\n              role: value\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"seller\",\n            children: \"Vendedor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"customer\",\n            children: \"Cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"admin_manage__button-register\",\n        disabled: disable,\n        onClick: handleClick,\n        children: \"CADASTRAR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(FormCreateUser, \"pRt+4QN/7kf2J6brMnJ3P58tOgw=\");\n_c = FormCreateUser;\nvar _c;\n$RefreshReg$(_c, \"FormCreateUser\");","map":{"version":3,"names":["React","useContext","useEffect","useState","requestAdminRegister","getUserInfo","AdminContext","AdminContainer","AdminForm","FormCreateUser","data","setData","name","email","password","role","disable","setDisable","setCreateUserError","setUsers","handleEnableButton","emailRegex","minLengthPassword","minLengthName","length","test","handleUserCreated","newUser","id","prevState","handleClick","token","userCreated","headers","Authorization","error","target","value"],"sources":["/home/anderson-mello/delivery-app-test/front-end/src/Components/FormCreateUser.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { requestAdminRegister } from '../Services/Request';\nimport { getUserInfo } from '../Services/Storage';\nimport { AdminContext } from '../Context/AdminContex';\nimport { AdminContainer, AdminForm } from '../Pages/Styles/admin';\n\nexport default function FormCreateUser() {\n  const [data, setData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    role: 'seller',\n  });\n  const [disable, setDisable] = useState(true);\n\n  const { setCreateUserError, setUsers } = useContext(AdminContext);\n\n  useEffect(() => {\n    const handleEnableButton = () => {\n      const emailRegex = /^[a-z0-9._-]+@[a-z0-9]+\\.[a-z]/i;\n      const minLengthPassword = 6;\n      const minLengthName = 12;\n      if (data.password.length >= minLengthPassword\n        && data.name.length >= minLengthName\n        && emailRegex.test(data.email)) setDisable(false);\n      else setDisable(true);\n    };\n\n    handleEnableButton();\n  }, [data]);\n\n  const handleUserCreated = (newUser) => {\n    delete newUser.id;\n    delete newUser.password;\n\n    setUsers((prevState) => [\n      ...prevState, newUser,\n    ]);\n  };\n\n  const handleClick = async () => {\n    const { token } = getUserInfo();\n\n    try {\n      const userCreated = await requestAdminRegister(\n        '/admin/manage',\n        data,\n        { headers: { Authorization: token } },\n      );\n      handleUserCreated(userCreated);\n    } catch (error) {\n      setCreateUserError(true);\n    }\n  };\n\n  return (\n    <AdminContainer>\n      <AdminForm>\n        <label htmlFor=\"admin-nome\">\n          Nome Completo\n          <input\n            type=\"text\"\n            id=\"admin-nome\"\n            data-testid=\"admin_manage__input-name\"\n            onChange={ ({ target: { value } }) => setData({ ...data, name: value }) }\n          />\n        </label>\n        <label htmlFor=\"admin-email\">\n          Email\n          <input\n            type=\"email\"\n            id=\"admin-email\"\n            data-testid=\"admin_manage__input-email\"\n            onChange={ ({ target: { value } }) => setData({ ...data, email: value }) }\n          />\n        </label>\n        <label htmlFor=\"admin-senha\">\n          Senha\n          <input\n            type=\"password\"\n            id=\"admin-senha\"\n            data-testid=\"admin_manage__input-password\"\n            onChange={ ({ target: { value } }) => setData({ ...data, password: value }) }\n          />\n        </label>\n        <label htmlFor=\"admin-select\">\n          Tipo\n          <select\n            id=\"admin-select\"\n            defaultValue=\"role\"\n            data-testid=\"admin_manage__select-role\"\n            onChange={ ({ target: { value } }) => setData({ ...data, role: value }) }\n          >\n            <option value=\"seller\">Vendedor</option>\n            <option value=\"customer\">Cliente</option>\n          </select>\n        </label>\n        <button\n          type=\"button\"\n          data-testid=\"admin_manage__button-register\"\n          disabled={ disable }\n          onClick={ handleClick }\n        >\n          CADASTRAR\n        </button>\n      </AdminForm>\n    </AdminContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}