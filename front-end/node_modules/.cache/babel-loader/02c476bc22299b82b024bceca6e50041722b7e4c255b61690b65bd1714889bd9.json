{"ast":null,"code":"import axios from 'axios';\nconst HOST = process.env.REACT_APP_API_HOST || \"localhost:3001\";\nconst PROTOCOL = process.env.REACT_APP_API_PROTOCOL || \"http\";\nconst api = axios.create({\n  baseURL: `${PROTOCOL}://${HOST}`,\n  timeout: 10000,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\nexport const get = async endpoint => {\n  const {\n    data\n  } = await api.get(endpoint);\n  return data;\n};\nexport const put = async (endpoint, body) => {\n  const {\n    data\n  } = await api.put(endpoint, body);\n  return data;\n};\nexport const requestRegister = async (endpoint, body) => {\n  const {\n    data\n  } = await api.post(endpoint, body);\n  return data;\n};\nexport const requestProducts = async endpoint => {\n  const {\n    data\n  } = await api.get(endpoint);\n  return data;\n};\nexport const requestOrders = async (endpoint, body) => {\n  const {\n    data\n  } = await api.post(endpoint, body);\n  return data;\n};\nexport const requestLogin = async (endpoint, body) => {\n  const {\n    data\n  } = await api.post(endpoint, body);\n  return data;\n};\nexport const createNewSale = async (endpoint, body) => {\n  const {\n    data\n  } = await api.post(endpoint, body);\n  return data;\n};\nexport const getProductSale = async endpoint => {\n  const {\n    data\n  } = await api.get(endpoint);\n  return data;\n};\nexport const requestAdminRegister = async (endpoint, body, headers) => {\n  const {\n    data\n  } = await api.post(endpoint, body, headers);\n  return data;\n};\nexport const requestUser = async (endpoint, body) => {\n  const {\n    data\n  } = await api.post(endpoint, body);\n  return data;\n};\nexport const requestAllUsers = async (endpoint, headers) => {\n  const {\n    data\n  } = await api.get(endpoint, headers);\n  return data;\n};\nexport const requestDeleteUser = async (endpoint, body) => {\n  const {\n    data\n  } = await api.delete(endpoint, body);\n  return data;\n};\n\n// export const requestToken = async () => {\n//   const { error } = await api.post('/validate');\n//   return error;\n// };\nexport const requestSellers = async endpoint => {\n  const {\n    data\n  } = await api.get(endpoint);\n  return data;\n};\nexport const validateToken = async () => {\n  const {\n    error\n  } = await api.post('/validate');\n  return error;\n};\nexport const setToken = token => {\n  api.defaults.headers.common.Authorization = token;\n};\nexport default api;","map":{"version":3,"names":["axios","HOST","process","env","REACT_APP_API_HOST","PROTOCOL","REACT_APP_API_PROTOCOL","api","create","baseURL","timeout","headers","get","endpoint","data","put","body","requestRegister","post","requestProducts","requestOrders","requestLogin","createNewSale","getProductSale","requestAdminRegister","requestUser","requestAllUsers","requestDeleteUser","delete","requestSellers","validateToken","error","setToken","token","defaults","common","Authorization"],"sources":["/home/anderson-mello/delivery-app-test/front-end/src/Services/Request.js"],"sourcesContent":["import axios from 'axios';\n\n\nconst HOST = process.env.REACT_APP_API_HOST || \"localhost:3001\";\nconst PROTOCOL = process.env.REACT_APP_API_PROTOCOL || \"http\";\n\nconst api = axios.create({\n  baseURL: `${PROTOCOL}://${HOST}`,\n  timeout: 10000,\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport const get = async (endpoint) => {\n  const { data } = await api.get(endpoint);\n  return data;\n};\n\nexport const put = async (endpoint, body) => {\n  const { data } = await api.put(endpoint, body);\n  return data;\n};\n\nexport const requestRegister = async (endpoint, body) => {\n  const { data } = await api.post(endpoint, body);\n  return data;\n};\n\nexport const requestProducts = async (endpoint) => {\n  const { data } = await api.get(endpoint);\n  return data;\n};\n\nexport const requestOrders = async (endpoint, body) => {\n  const { data } = await api.post(endpoint, body);\n  return data;\n};\n\nexport const requestLogin = async (endpoint, body) => {\n  const { data } = await api.post(endpoint, body);\n  return data;\n};\n\nexport const createNewSale = async (endpoint, body) => {\n  const { data } = await api.post(endpoint, body);\n  return data;\n};\n\nexport const getProductSale = async (endpoint) => {\n  const { data } = await api.get(endpoint);\n  return data;\n};\n\nexport const requestAdminRegister = async (endpoint, body, headers) => {\n  const { data } = await api.post(endpoint, body, headers);\n  return data;\n};\n\nexport const requestUser = async (endpoint, body) => {\n  const { data } = await api.post(endpoint, body);\n  return data;\n};\n\nexport const requestAllUsers = async (endpoint, headers) => {\n  const { data } = await api.get(endpoint, headers);\n  return data;\n};\n\nexport const requestDeleteUser = async (endpoint, body) => {\n  const { data } = await api.delete(endpoint, body);\n  return data;\n};\n\n// export const requestToken = async () => {\n//   const { error } = await api.post('/validate');\n//   return error;\n// };\nexport const requestSellers = async (endpoint) => {\n  const { data } = await api.get(endpoint);\n  return data;\n};\n\nexport const validateToken = async () => {\n  const { error } = await api.post('/validate');\n  return error;\n};\n\nexport const setToken = (token) => {\n  api.defaults.headers.common.Authorization = token;\n};\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}